name: Deploy Production

on:
  push:
    branches: [ "master" ]

jobs:
  deploy-production:
    strategy:
      matrix:
        os: [node-webapp-93, node-webapp-95, node-webapp-96]
    name: Deploy Project to Production Server
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v3
    - name: Change to root directory
      run: cd /var/www/bos
    - name: Pull changes
      run: git reset --hard origin/master && git pull
    # - name: Copy .env
      # run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install --no-dev -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Directory Permissions
      run: chgrp -R www-data storage bootstrap/cache
    - name: optimizing
      run: php artisan optimize
    - name: Install node dependency
      run: npm rebuild && npm install
    - name: Compile js asset production
      run: npm run prod
    # - name: Migrating database
      # env:
        # DB_CONNECTION: pgsql_multi_db
        # DB_HOST_READ: db-read-proxy.service.divtik-1.bos-production.internal
        # DB_PORT_READ: 5432
        # DB_HOST_WRITE: db-write.service.divtik-1.bos-production.internal
        # DB_PORT_WRITE: 5432
        # DB_DATABASE: ${{ secrets.DB_DATABASE }}
        # DB_USERNAME: ${{ secrets.DB_USERNAME }}
        # DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      # run: php artisan migrate
  # laravel-tests:
    # needs: deploy-production
    # runs-on: ubuntu-latest

    # steps:
    # - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      # with:
        # php-version: '8.1'
    # - uses: actions/checkout@v3
    # - name: Copy .env
      # run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    # - name: Install Dependencies
      # run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    # - name: Generate key
      # run: php artisan key:generate
    # - name: Directory Permissions
      # run: chmod -R 777 storage bootstrap/cache
    # - name: Create Database
      # run: |
        # mkdir -p database
        # touch database/database.sqlite
    # - name: Execute tests (Unit and Feature tests) via PHPUnit
      # env:
        # DB_CONNECTION: sqlite
        # DB_DATABASE: database/database.sqlite
      # run: vendor/bin/phpunit
